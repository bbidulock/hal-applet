node / {
  interface org.freedesktop.DBus.Introspectable {
    methods:
      Introspect(out s data);
    signals:
    properties:
  };
  node /org {
    interface org.freedesktop.DBus.Introspectable {
      methods:
        Introspect(out s data);
      signals:
      properties:
    };
    node /org/freedesktop {
      interface org.freedesktop.DBus.Introspectable {
        methods:
          Introspect(out s data);
        signals:
        properties:
      };
      node /org/freedesktop/Hal {
        interface org.freedesktop.DBus.Introspectable {
          methods:
            Introspect(out s data);
          signals:
          properties:
        };
        node /org/freedesktop/Hal/Manager {
          interface org.freedesktop.DBus.Introspectable {
            methods:
              Introspect(out s data);
            signals:
            properties:
          };
          interface org.freedesktop.Hal.Manager {
            methods:
              GetAllDevices(out as devices);
              GetAllDevicesWithProperties(out a(sa{sv}) devices_with_props);
              DeviceExists(in  s udi,
                           out b does_it_exist);
              FindDeviceStringMatch(in  s key,
                                    in  s value,
                                    out as devices);
              FindDeviceByCapability(in  s capability,
                                     out as devices);
              NewDevice(out s temporary_udi);
              Remove(in  s udi);
              CommitToGdl(in  s temporary_udi,
                          in  s global_udi);
              AcquireGlobalInterfaceLock(in  s interface_name,
                                         in  b exclusive);
              ReleaseGlobalInterfaceLock(in  s interface_name);
              SingletonAddonIsReady(in  s command_line);
            signals:
              DeviceAdded(s udi);
              DeviceRemoved(s udi);
              NewCapability(s udi,
                            s cap_name);
              GlobalInterfaceLockAcquired(s interface_name,
                                          s lock_holder,
                                          i num_locks);
              GlobalInterfaceLockReleased(s interface_name,
                                          s lock_holder,
                                          i num_locks);
            properties:
          };
        };
        node /org/freedesktop/Hal/devices {
          interface org.freedesktop.DBus.Introspectable {
            methods:
              Introspect(out s data);
            signals:
            properties:
          };
          node /org/freedesktop/Hal/devices/volume_uuid_7RS2nK_wxrv_HF4m_YtE7_EJsn_jX2m_UyhmXC {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/volume_uuid_845664b7_2925_4e17_81b7_a979360a7da2 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/volume_uuid_1be97ae0_272b_4810_bbad_bb3465f7cb81 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
            interface org.freedesktop.Hal.Device.Volume {
              methods:
                Mount(in  s mount_point,
                      in  s fstype,
                      in  as extra_options,
                      out i return_code);
                Unmount(in  as extra_options,
                        out i return_code);
                Eject(in  as extra_options,
                      out i return_code);
              signals:
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/storage_serial_HL_DT_STDVD_ROM_GDR8163B {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
            interface org.freedesktop.Hal.Device.Storage {
              methods:
                Eject(in  as extra_options,
                      out i return_code);
                CloseTray(in  as extra_options,
                          out i return_code);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device.Storage {
              methods:
                Eject(in  as extra_options,
                      out i return_code);
                CloseTray(in  as extra_options,
                          out i return_code);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device.Storage.Removable {
              methods:
                CheckForMedia(out b call_had_sideeffect);
              signals:
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/storage_serial_KINGSTON_SV100S2128G_08BB70053349 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/computer {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
            interface org.freedesktop.Hal.Device.SystemPowerManagement {
              methods:
                Suspend(in  i num_seconds_to_sleep,
                        out i return_code);
                SuspendHybrid(in  i num_seconds_to_sleep,
                              out i return_code);
                Hibernate(out i return_code);
                Shutdown(out i return_code);
                Reboot(out i return_code);
                SetPowerSave(in  b enable_power_save,
                             out i return_code);
              signals:
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0501_0_serial_platform_1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0501_serial_platform_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/computer_alsa_timer {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/net_computer_loopback {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/ppdev_parport0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_pcspkr_logicaldev_input {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_i8042_i8042_AUX_port_logicaldev_input {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_i8042_i8042_KBD_port_logicaldev_input {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host_0_scsi_host {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host_scsi_host {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_playback_4 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_capture_3 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_capture_2 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_capture_1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_playback_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_capture_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0_alsa_control__1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e_sound_card_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/net_00_10_c6_a3_67_e4 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
            interface org.freedesktop.Hal.Device.WakeOnLan {
              methods:
                GetSupported(out i return_code);
                GetEnabled(out i return_code);
                SetEnabled(in  b enable,
                           out i return_code);
              signals:
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/net_1c_bd_b9_7f_fd_af {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
            interface org.freedesktop.Hal.Device.WakeOnLan {
              methods:
                GetSupported(out i return_code);
                GetEnabled(out i return_code);
                SetEnabled(in  b enable,
                           out i return_code);
              signals:
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2582_drm__null__controlD64 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2582_drm__null__card0_drm__null__card0_VGA_1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2582_drm__null__card0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/computer_logicaldev_input_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/computer_logicaldev_input {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_NSC1100 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0400 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0501_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0501 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0700 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0c02_1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0f13 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0c02_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0303 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_INT0800 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0800 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0b00 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0c04 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0200 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0c02 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pnp_PNP0a03 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_vesafb_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_serial8250 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_pcspkr {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_microcode {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_i8042_i8042_AUX_port {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_i8042_i8042_KBD_port {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_i8042 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_alarmtimer {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266a {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host_0_scsi_device_lun0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host_scsi_device_lun0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651_scsi_host {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2651 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_iTCO_wdt {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/platform_gpio_ich {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2640 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_266e {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_14e4_1654 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_1186_4b01 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_244e {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_2_0000_00_1d_7_if0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_2_0000_00_1d_7 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_265c {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_3_if0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_3 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_265b {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_2_if0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_2 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_265a {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_1_if0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_1 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2659 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_0_if0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/usb_device_1d6b_1_0000_00_1d_0 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2658 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2582 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
          node /org/freedesktop/Hal/devices/pci_8086_2580 {
            interface org.freedesktop.DBus.Introspectable {
              methods:
                Introspect(out s data);
              signals:
              properties:
            };
            interface org.freedesktop.Hal.Device {
              methods:
                GetAllProperties(out a{sv} properties);
                SetMultipleProperties(in  a{sv} properties);
                GetProperty(in  s key,
                            out v value);
                GetPropertyString(in  s key,
                                  out s value);
                GetPropertyStringList(in  s key,
                                      out as value);
                GetPropertyInteger(in  s key,
                                   out i value);
                GetPropertyBoolean(in  s key,
                                   out b value);
                GetPropertyDouble(in  s key,
                                  out d value);
                SetProperty(in  s key,
                            in  v value);
                SetPropertyString(in  s key,
                                  in  s value);
                SetPropertyStringList(in  s key,
                                      in  as value);
                SetPropertyInteger(in  s key,
                                   in  i value);
                SetPropertyBoolean(in  s key,
                                   in  b value);
                SetPropertyDouble(in  s key,
                                  in  d value);
                RemoveProperty(in  s key);
                GetPropertyType(in  s key,
                                out i type);
                PropertyExists(in  s key,
                               out b does_it_exist);
                AddCapability(in  s capability);
                QueryCapability(in  s capability,
                                out b does_it_have_capability);
                Lock(in  s reason,
                     out b acquired_lock);
                Unlock(out b released_lock);
                AcquireInterfaceLock(in  s interface_name,
                                     in  b exclusive);
                ReleaseInterfaceLock(in  s interface_name);
                IsCallerLockedOut(in  s interface_name,
                                  in  s caller_sysbus_name,
                                  out b whether_caller_is_locked_out);
                IsCallerPrivileged(in  s action,
                                   in  s caller_sysbus_name,
                                   out s result);
                IsLockedByOthers(in  s interface_name,
                                 out b whether_it_is_locked_by_others);
                StringListAppend(in  s key,
                                 in  s value);
                StringListPrepend(in  s key,
                                  in  s value);
                StringListRemove(in  s key,
                                 in  s value);
                EmitCondition(in  s condition_name,
                              in  s condition_details,
                              out b rc);
                Rescan(out b call_had_sideeffect);
                Reprobe(out b call_had_sideeffect);
                ClaimInterface(in  s interface_name,
                               in  s introspection_xml,
                               out b rc);
                AddonIsReady(out b rc);
              signals:
                PropertyModified(i num_updates,
                                 a(sbb) updates);
                Condition(s cond_name,
                          s cond_details);
                InterfaceLockAcquired(s interface_name,
                                      s lock_holder,
                                      i num_locks);
                InterfaceLockReleased(s interface_name,
                                      s lock_holder,
                                      i num_locks);
              properties:
            };
          };
        };
      };
    };
  };
};
